# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]


jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update
        sudo apt-get install -y docker-ce

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Install Maven
      run: sudo apt-get update && sudo apt-get install -y maven
    - name: Check if kubeDis container is running
      run: |
        if docker inspect --format '{{.State.Running}}' kubeDis; then
          echo "kubeDis container is already running"
        else
          echo "Starting kubeDis container"
          docker run --name kubeDis -e POSTGRES_USER=disertatieUser -e POSTGRES_DB=disertatie -e POSTGRES_PASSWORD=1234 -p 5432:5432 -d postgres
        fi
    - name: Run tests
      run: mvn test
      env:
        SPRING_PROFILES_ACTIVE: ci
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#    - name: Execute Jar File
#      run: sudo java -jar /home/ubuntu/actions-runner/_work/BackendKube/BackendKube/target/disertatie-0.0.1-SNAPSHOT.jar
#  test:
#    runs-on: self-hosted
#    steps:
#      - name: Hello2
#        run: echo "hello2"

